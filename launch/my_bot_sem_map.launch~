<launch>

  	<arg name="/mobile_controller/odom"   default="/odom"/>

  <!-- By default, we are not in debug mode-->
  	<arg name="debug" default="false" />
 
  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  	<include file="$(find mybot_generated)/launch/move_group.launch">
    	<arg name="allow_trajectory_execution" value="true"/>
   	 <arg name="fake_execution" value="false"/>
   	 <arg name="info" value="true"/>
    	<arg name="debug" value="$(arg debug)"/>
  	</include>
  
  <!-- Mybot navigation -->
  	<param name="/use_sim_time" value="false"/>
  	<include file="$(find mybot_2dnav)/config/move_base.xml"/>
  
   <!-- AMCL -->
  	<node pkg="amcl" type="amcl" name="amcl">
      <!-- Publish scans from best pose at a max of 10 Hz -->
      <param name="odom_model_type" value="omni"/>
      <param name="odom_frame_id" value="odom"/>
      <param name="base_frame_id" value="base_footprint"/>
    </node>  

 	<!-- Laser scan  -->
    <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter">
      <rosparam command="load" file="$(find mybot_2dnav)/config/my_laser_config.yaml" />
    </node>

	<!-- RGBD streamer-->
  	<include file="$(find rgbd_streamer)/launcher/receiver.launch"/>
  	<include file="$(find image_proc)/launch/image_proc.launch"/>

	<!-- Generate colored PCL -->
		<!-- <node pkg="nodelet" type="nodelet" args="manager" name="nodelet_manager" output="screen"/> -->

	 	<node pkg="nodelet" type="nodelet" name="my_cloudify_with_color"
		    args="load depth_image_proc/point_cloud_xyzrgb nodelet_manager no-bond">
			<remap from="rgb/camera_info" to="/rgbd_receiver/rgb/camera_info"/>
			<remap from="rgb/image_rect_color" to="/rgbd_receiver/rgb/image_raw"/> 
			<remap from="depth_registered/image_rect" to="/rgbd_receiver/depth_registered/image_rect"/>
			<remap from="depth_registered/points" to="/original_colored_pcl"/>
		</node> 
	

	<!-- Object detection  -->
		<node pkg="dn_object_detect" type="dn_object_detect" name="dn_object_detect" output="screen">
			<param name="camera" type="str" value="/rgbd_receiver/rgb/image_raw"/>
			<param name="_image_transport" type="str" value="compressed"/>
			<param name="yolo_config" type="str" value="/home/adrian/catkin_ws/src/dn_object_detect/darknet/cfg/yolo-coco.cfg"/>
			<param name="yolo_model" type="str" value="/home/adrian/catkin_ws/src/dn_object_detect/darknet/weights/yolo-coco.weights"/>
			<param name="threshold" type="double" value="0.40"/>
		</node>

	<!-- Crop rgb and depth images with mask + generate class full-PCL -->
		<node pkg="semantic_mapping" type="mask_data_2_labpcl" name="mask_data_2_pcl"  output="screen" respawn="true"/> 
	
	<!-- Segment each class accordingly 
		<node pkg="semantic_mapping" type="class_labpcl_seg" name="class_pcl_seg"  output="screen" respawn="true"/> -->

	<!-- Run octomap 
		<node pkg="octomap_server" type="octomap_server_node" name="octomap_server" output="screen">
		  <param name="resolution" value="0.01" />     
		  <param name="frame_id" type="string" value="map" />
		  <param name="base_frame_id" type="string" value="/sensor_base" />
		  <param name="sensor_model/max_range" value="2.5" />
		  <param name="sensor_model/hit" value="0.6" />
		  <param name="sensor_model/miss" value="0.45" />
			<param name="latch" value="false" />
		  <param name="filter_speckles" type="bool" value="true" />
		  <remap from="cloud_in" to="/rgbd_receiver/depth_registered/points" /> 
		</node> 
	-->

	<!-- MAPS -->
	<!-- No map 
		<include file="$(find mybot_2dnav)/config/slam_gmapping.xml"/>-->
	<!-- Has map -->
	  <node name="map_server" pkg="map_server" type="map_server" args="/home/adrian/catkin_ws/src/mybot/map/mymap2.yaml"/>

	<!-- Run Rviz and load the default config to see the state of the move_group node -->
  	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find semantic_mapping)/rviz/my_bot_sem_map.rviz"/> 
	
</launch>
